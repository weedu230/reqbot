'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { Requirement } from '@/lib/types';
import { Header } from '@/components/layout/header';
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from '@/components/ui/table';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Separator } from '@/components/ui/separator';
import { Printer, ArrowLeft } from 'lucide-react';

const RequirementSection = ({
  title,
  requirements,
}: {
  title: string;
  requirements: Requirement[];
}) => (
  <Card>
    <CardHeader>
      <CardTitle>{title}</CardTitle>
    </CardHeader>
    <CardContent>
      {requirements.length > 0 ? (
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead className="w-[100px]">ID</TableHead>
              <TableHead>Description</TableHead>
              <TableHead className="text-right">Priority</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {requirements.map((req) => (
              <TableRow key={req.id}>
                <TableCell className="font-medium">{req.id}</TableCell>
                <TableCell>{req.description}</TableCell>
                <TableCell className="text-right">
                  <Badge
                    variant={
                      req.priority === 'High'
                        ? 'destructive'
                        : req.priority === 'Med'
                        ? 'secondary'
                        : 'outline'
                    }
                  >
                    {req.priority}
                  </Badge>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      ) : (
        <p className="text-muted-foreground text-sm">No {title.toLowerCase()} requirements.</p>
      )}
    </CardContent>
  </Card>
);

const PlaceholderSection = ({ title }: { title: string }) => (
    <Card>
        <CardHeader>
            <CardTitle>{title}</CardTitle>
        </CardHeader>
        <CardContent>
            <p className="text-muted-foreground text-sm">[Placeholder for {title}. This content will be auto-generated in a future version.]</p>
        </CardContent>
    </Card>
);

export default function ReportPage() {
  const [requirements, setRequirements] = useState<Requirement[]>([]);
  const [isClient, setIsClient] = useState(false);
  const router = useRouter();

  useEffect(() => {
    setIsClient(true);
    try {
      const storedRequirements = localStorage.getItem('requirements');
      if (storedRequirements) {
        setRequirements(JSON.parse(storedRequirements));
      } else {
        // If no requirements, redirect back
        router.push('/');
      }
    } catch (error) {
      console.error('Failed to load requirements from local storage', error);
      router.push('/');
    }
  }, [router]);

  if (!isClient || requirements.length === 0) {
    return (
      <div className="flex h-screen items-center justify-center">
        <p>Loading report...</p>
      </div>
    );
  }

  const functional = requirements.filter((r) => r.type === 'Functional');
  const nonFunctional = requirements.filter((r) => r.type === 'NonFunctional');
  const domain = requirements.filter((r) => r.type === 'Domain');

  return (
    <div className="bg-background min-h-screen">
      <Header />
      <div className="fixed top-20 right-4 z-10 flex gap-2 no-print">
          <Button variant="outline" size="icon" onClick={() => router.push('/')}>
            <ArrowLeft className="h-4 w-4" />
            <span className="sr-only">Back to Chat</span>
          </Button>
          <Button onClick={() => window.print()}>
            <Printer className="mr-2 h-4 w-4" />
            Print / Save as PDF
          </Button>
      </div>
      <main className="max-w-5xl mx-auto p-4 md:p-8 lg:p-12 print:p-0">
        <div className="space-y-8">
          <header className="space-y-2">
            <h1 className="text-4xl font-bold">Requirements Report</h1>
            <p className="text-muted-foreground">
              Generated by ReqBot on {new Date().toLocaleDateString()}
            </p>
          </header>
          
          <Separator />
          
          <Card>
            <CardHeader><CardTitle>Executive Summary</CardTitle></CardHeader>
            <CardContent><p className="text-muted-foreground">[Placeholder for auto-generated executive summary.]</p></CardContent>
          </Card>

          <div className="space-y-6">
            <RequirementSection title="Functional Requirements" requirements={functional} />
            <RequirementSection title="Non-Functional Requirements" requirements={nonFunctional} />
            <RequirementSection title="Domain Requirements" requirements={domain} />
          </div>

          <div className="space-y-6">
            <PlaceholderSection title="Activity Diagram" />
            <PlaceholderSection title="Cost Estimation" />
          </div>

          <Card>
            <CardHeader><CardTitle>References</CardTitle></CardHeader>
            <CardContent><p className="text-muted-foreground">[Placeholder for references section.]</p></CardContent>
          </Card>
        </div>
      </main>
    </div>
  );
}
